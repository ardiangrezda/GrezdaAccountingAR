@page "/admin/user-business-units"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Server.Models
@using Server.Services
@inject UserManager<ApplicationUser> UserManager
@inject BusinessUnitService BusinessUnitService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid px-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Business Unit Access Management</h2>
            </div>

            @if (loading)
            {
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div class="row g-4">
                            <!-- User List -->
                            <div class="col-md-4 border-end">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h4 class="text-primary mb-0">Users</h4>
                                </div>
                                <div class="list-group user-list">
                                    @foreach (var user in users)
                                    {
                                        <button class="list-group-item list-group-item-action d-flex align-items-center @(selectedUser?.Id == user.Id ? "active" : "")"
                                                @onclick="() => SelectUser(user)">
                                            <i class="fas fa-user me-2"></i>
                                            <span>@user.UserName</span>
                                        </button>
                                    }
                                </div>
                            </div>

                            <!-- Business Unit Assignments -->
                            <div class="col-md-8">
                                @if (selectedUser != null)
                                {
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h4 class="text-primary mb-0">
                                            <i class="fas fa-building me-2"></i>
                                            Business Units for @selectedUser.UserName
                                        </h4>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Code</th>
                                                    <th>Name</th>
                                                    <th class="text-center">Access</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var unit in businessUnits)
                                                {
                                                    <tr>
                                                        <td><strong>@unit.Code</strong></td>
                                                        <td>@unit.Name</td>
                                                        <td class="text-center">
                                                            <div class="form-check d-flex justify-content-center">
                                                                <input type="checkbox" 
                                                                       class="form-check-input cursor-pointer"
                                                                       checked="@HasAccess(unit.Id)"
                                                                       @onchange="@(e => ToggleAccess(unit.Id, (bool)e.Value))" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info d-flex align-items-center">
                                        <i class="fas fa-info-circle me-2"></i>
                                        Select a user to manage their business unit access.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .user-list {
        max-height: 70vh;
        overflow-y: auto;
    }

    .user-list::-webkit-scrollbar {
        width: 6px;
    }

    .user-list::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .user-list::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 3px;
    }

    .user-list::-webkit-scrollbar-thumb:hover {
        background: #555;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .table tbody tr:hover {
        background-color: rgba(0,0,0,0.02);
    }

    .form-check-input {
        width: 1.2em;
        height: 1.2em;
    }

    .card {
        border-radius: 0.5rem;
    }

    .table th {
        font-weight: 600;
    }
</style>

@code {
    private bool loading = true;
    private List<ApplicationUser> users = new();
    private List<BusinessUnit> businessUnits = new();
    private ApplicationUser? selectedUser;
    private List<UserBusinessUnit> userBusinessUnits = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            loading = true;
            users = await UserManager.Users.ToListAsync();
            businessUnits = await BusinessUnitService.GetAllAsync();
            await LoadUserBusinessUnits();
        }
        finally
        {
            loading = false;
        }
    }

    private async Task SelectUser(ApplicationUser user)
    {
        selectedUser = user;
        await LoadUserBusinessUnits();
    }

    private async Task LoadUserBusinessUnits()
    {
        if (selectedUser != null)
        {
            userBusinessUnits = await BusinessUnitService.GetUserBusinessUnitsAsync(selectedUser.Id);
        }
    }

    private bool HasAccess(int businessUnitId)
    {
        return userBusinessUnits.Any(ub => ub.BusinessUnitId == businessUnitId);
    }

    private async Task ToggleAccess(int businessUnitId, bool hasAccess)
    {
        if (selectedUser == null) return;

        try
        {
            if (hasAccess)
            {
                await BusinessUnitService.AssignUserToBusinessUnitAsync(selectedUser.Id, businessUnitId);
            }
            else
            {
                await BusinessUnitService.RemoveUserFromBusinessUnitAsync(selectedUser.Id, businessUnitId);
            }

            await LoadUserBusinessUnits();
            await JSRuntime.InvokeVoidAsync("alert", "Access updated successfully!");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error updating access: {ex.Message}");
        }
    }
}
