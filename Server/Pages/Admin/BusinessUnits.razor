@page "/admin/business-units"
@using Server.Models
@using Server.Services
@inject BusinessUnitService businessUnitService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Business Units</h1>
        <button class="btn btn-success" @onclick="CreateNew">
            <i class="fas fa-plus"></i> New Business Unit
        </button>
    </div>

    @if (businessUnits == null)
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Address</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var unit in businessUnits)
                            {
                                <tr>
                                    <td>@unit.Code</td>
                                    <td>@unit.Name</td>
                                    <td>@unit.Description</td>
                                    <td>@unit.Address</td>
                                    <td>
                                        @if (unit.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-primary me-2" @onclick="() => Edit(unit.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger" @onclick="() => Delete(unit.Id)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<BusinessUnit>? businessUnits;

    protected override async Task OnInitializedAsync()
    {
        await LoadBusinessUnits();
    }

    private async Task LoadBusinessUnits()
    {
        businessUnits = await businessUnitService.GetAllAsync();
    }

    private void CreateNew()
    {
        NavigationManager.NavigateTo("/admin/business-units/create");
    }

    private void Edit(int id)
    {
        NavigationManager.NavigateTo($"/admin/business-units/edit/{id}");
    }

    private async Task Delete(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this business unit?"))
        {
            await businessUnitService.DeleteAsync(id);
            await LoadBusinessUnits();
        }
    }
}
